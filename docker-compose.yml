services:
  postgres:
    image: postgres:14
    container_name: tcph-postgres
    environment:
      POSTGRES_DB: tcph_dw
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tcph-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tcph_dw"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8090:80"
    networks:
      - tcph-network
    depends_on:
      postgres:
        condition: service_healthy

  minio:
    image: minio/minio:latest
    container_name: tcph-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    ports:
      - "9000:9000"  # API endpoint
      - "9001:9001"  # Web console
    volumes:
      - minio_data:/data
    networks:
      - tcph-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Spark Services
  spark-master:
    build:
      context: .
      dockerfile: infrastructure/spark/Dockerfile
    container_name: tcph-spark-master
    env_file: .env
    environment:
      - SPARK_MODE=master
      - SPARK_DAEMON_MEMORY=4g
    ports:
      - "8081:8080"  # Spark Master Web UI
      - "7077:7077"  # Spark Master port
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./spark-data:/opt/spark-data
    networks:
      - tcph-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  spark-worker-1:
    build:
      context: .
      dockerfile: infrastructure/spark/Dockerfile
    container_name: tcph-spark-worker-1
    env_file: .env
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_CORES=2
    ports:
      - "8082:8081"  # Worker Web UI
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./spark-data:/opt/spark-data
    networks:
      - tcph-network
    depends_on:
      - spark-master

  spark-worker-2:
    build:
      context: .
      dockerfile: infrastructure/spark/Dockerfile
    container_name: tcph-spark-worker-2
    env_file: .env
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_CORES=2
    ports:
      - "8083:8081"  # Worker Web UI
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./spark-data:/opt/spark-data
    networks:
      - tcph-network
    depends_on:
      - spark-master

  spark-thrift:
    build:
      context: .
      dockerfile: infrastructure/spark/Dockerfile
    container_name: tcph-spark-thrift
    env_file: .env
    command: >
      sh -c "sleep 20 && /opt/bitnami/spark/sbin/start-thriftserver.sh
      --master spark://spark-master:7077
      --conf spark.driver.memory=8g
      --conf spark.cores.max=2
      --conf spark.sql.warehouse.dir=s3a://gold/warehouse/"
    ports:
      - "10000:10000"  # Thrift Server port (for DBT)
      - "4040:4040"    # Spark SQL Web UI
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./spark-data:/opt/spark-data
    networks:
      - tcph-network
    depends_on:
      - spark-master
      - minio

  spark-notebook:
    build:
      context: .
      dockerfile: infrastructure/spark-notebook/Dockerfile
    container_name: tcph-spark-notebook
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_DRIVER_HOST=spark-notebook
      - SPARK_DRIVER_BINDADDRESS=0.0.0.0
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./infrastructure/spark-notebook/conf/spark-defaults.conf:/usr/local/spark/conf/spark-defaults.conf
      - ./spark-apps:/opt/spark-apps
      - ./spark-data:/opt/spark-data
    ports:
      - "8888:8888"    # Jupyter Lab
      - "4043:4040"    # Spark UI
      - "4041:4041"    # Additional Spark UI ports
      - "4042:4042"
    networks:
      - tcph-network
    depends_on:
      - spark-master
      - minio
    
  
volumes:
  postgres_data:
  pgadmin_data:
  minio_data:

networks:
  tcph-network:
    driver: bridge
    external: true